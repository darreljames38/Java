import java.util.Scanner;

// Encapsulation class for a MovieRoom
class MovieRoom {
    private String roomName;
    private boolean[] seats = new boolean[5]; // 5 seats per room

    public MovieRoom(String roomName) {
        this.roomName = roomName;
    }

    public String getRoomName() {
        return roomName;
    }

    // Check if room is full
    public boolean isFull() {
        for (boolean seat : seats) {
            if (!seat) {
                return false; // Found an available seat
            }
        }
        return true;
    }

    // Check if specific seat is available
    public boolean isSeatAvailable(int seatNumber) {
        if (seatNumber < 1 || seatNumber > 5) {
            return false;
        }
        return !seats[seatNumber - 1];
    }

    // Book a seat
    public boolean bookSeat(int seatNumber) {
        if (isSeatAvailable(seatNumber)) {
            seats[seatNumber - 1] = true;
            return true;
        } else {
            return false;
        }
    }

    // Display all seat statuses
    public void displaySeats() {
        System.out.println("Seat status for " + roomName + ":");
        for (int i = 0; i < seats.length; i++) {
            System.out.println("Seat " + (i + 1) + ": " + (seats[i] ? "Taken" : "Available"));
        }
    }
}

// Subclass (inherits from MovieRoom)
class MovieSchedule extends MovieRoom {
    private String[] availableTimes = {"7 AM", "12 PM", "6 PM"};

    public MovieSchedule(String roomName) {
        super(roomName);
    }

    public void displayTimes() {
        System.out.println("Available times for " + getRoomName() + ":");
        for (String time : availableTimes) {
            System.out.println("- " + time);
        }
    }
}

// Main Program
public class MovieBooking {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        // Create 3 rooms
        MovieSchedule[] rooms = {
            new MovieSchedule("Room 1"),
            new MovieSchedule("Room 2"),
            new MovieSchedule("Room 3")
        };

        System.out.println("ðŸŽ¬ Welcome to the Movie Booking System ðŸŽ¬");

        while (true) {
            System.out.println("\nAvailable Movie Rooms:");
            for (int i = 0; i < rooms.length; i++) {
                System.out.println((i + 1) + ". " + rooms[i].getRoomName() + (rooms[i].isFull() ? " (FULL)" : ""));
            }

            System.out.print("Select a room (1-3) or 0 to exit: ");
            int roomChoice = input.nextInt();

            if (roomChoice == 0) {
                System.out.println("Thank you for using the system!");
                break;
            }

            if (roomChoice < 1 || roomChoice > 3) {
                System.out.println("Invalid room number!");
                continue;
            }

            MovieSchedule selectedRoom = rooms[roomChoice - 1];

            if (selectedRoom.isFull()) {
                System.out.println("Sorry, this room is full!");
                continue;
            }

            selectedRoom.displaySeats();
            System.out.print("Choose a seat (1-5): ");
            int seatChoice = input.nextInt();

            if (!selectedRoom.isSeatAvailable(seatChoice)) {
                System.out.println("Sorry, that seat is already taken!");
                continue;
            }

            selectedRoom.displayTimes();
            System.out.print("Select time (1 for 7AM, 2 for 12PM, 3 for 6PM): ");
            int timeChoice = input.nextInt();

            if (timeChoice < 1 || timeChoice > 3) {
                System.out.println("Invalid time!");
                continue;
            }

            // Book the seat
            selectedRoom.bookSeat(seatChoice);
            System.out.println("\nâœ… Booking Successful!");
            System.out.println("Room: " + selectedRoom.getRoomName());
            System.out.println("Seat: " + seatChoice);
            System.out.println("Time: " + (timeChoice == 1 ? "7 AM" : timeChoice == 2 ? "12 PM" : "6 PM"));
        }

        input.close();
    }
}
